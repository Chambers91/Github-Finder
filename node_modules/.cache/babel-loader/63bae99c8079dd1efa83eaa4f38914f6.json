{"ast":null,"code":"import _slicedToArray from \"/Users/BossmanChambers/Desktop/github-finder/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\nvar _jsxFileName = \"/Users/BossmanChambers/Desktop/github-finder/src/App.js\";\nimport './App.css';\nimport axios from 'axios';\nimport React, { Fragment, useState } from 'react';\nimport Alert from './components/layout/Alert';\nimport Users from './components/users/Users';\nimport User from './components/users/User';\nimport About from './components/pages/About';\nimport Search from './components/users/Search';\nimport Navbar from './components/layout/Navbar';\nimport GithubState from './context/github/GithubState';\nimport { BrowserRouter as Router, Switch, Route } from 'react-router-dom';\n\nconst App = () => {\n  const _useState = useState([]),\n        _useState2 = _slicedToArray(_useState, 2),\n        users = _useState2[0],\n        setUsers = _useState2[1];\n\n  const _useState3 = useState({}),\n        _useState4 = _slicedToArray(_useState3, 2),\n        user = _useState4[0],\n        setUser = _useState4[1];\n\n  const _useState5 = useState([]),\n        _useState6 = _slicedToArray(_useState5, 2),\n        repos = _useState6[0],\n        setRepos = _useState6[1];\n\n  const _useState7 = useState(false),\n        _useState8 = _slicedToArray(_useState7, 2),\n        loading = _useState8[0],\n        setLoading = _useState8[1];\n\n  const _useState9 = useState(null),\n        _useState10 = _slicedToArray(_useState9, 2),\n        alert = _useState10[0],\n        setAlert = _useState10[1]; //search Github Users\n\n\n  const searchUsers = async text => {\n    setLoading(true);\n    const res = await axios.get(\"https://api.github.com/search/users?q=\".concat(text, \"&client_id=\").concat(process.env.REACT_APP_GITHUB_CLIENT_ID, \"&client_secret=\").concat(process.env.REACT_APP_GITHUB_CLIENT_SECRET));\n    setUsers(res.data.items);\n    setLoading(false);\n  }; //Get single Github User\n\n\n  const getUser = async username => {\n    setLoading(true);\n    const res = await axios.get(\"https://api.github.com/users/\".concat(username, \"?client_id=\").concat(process.env.REACT_APP_GITHUB_CLIENT_ID, \"&client_secret=\").concat(process.env.REACT_APP_GITHUB_CLIENT_SECRET));\n    setUser(res.data);\n    setLoading(false);\n  }; //Get user repos\n\n\n  const getUserRepos = async username => {\n    setLoading(true);\n    const res = await axios.get(\"https://api.github.com/users/\".concat(username, \"/repos?per_page=5&sort=created:asc&client_id=\").concat(process.env.REACT_APP_GITHUB_CLIENT_ID, \"&client_secret=\").concat(process.env.REACT_APP_GITHUB_CLIENT_SECRET));\n    setRepos(res.data);\n    setLoading(false);\n  }; //Clear Users from state\n\n\n  const clearUsers = () => {\n    setUsers([]);\n    setLoading(false);\n  }; // Set Alert\n\n\n  const showAlert = (msg, type) => {\n    setAlert({\n      msg,\n      type\n    });\n    setTimeout(() => setAlert(null), 2000);\n  };\n\n  return React.createElement(Router, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 69\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    className: \"App\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 70\n    },\n    __self: this\n  }, React.createElement(Navbar, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 71\n    },\n    __self: this\n  }), React.createElement(\"div\", {\n    className: \"container\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 72\n    },\n    __self: this\n  }, React.createElement(Alert, {\n    alert: alert,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 73\n    },\n    __self: this\n  }), React.createElement(Switch, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 74\n    },\n    __self: this\n  }, React.createElement(Route, {\n    exact: true,\n    path: \"/\",\n    render: props => React.createElement(Fragment, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 79\n      },\n      __self: this\n    }, React.createElement(Search, {\n      searchUsers: searchUsers,\n      clearUsers: clearUsers,\n      showClear: users.length > 0 ? true : false,\n      setAlert: showAlert,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 80\n      },\n      __self: this\n    }), React.createElement(Users, {\n      loading: loading,\n      users: users,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 86\n      },\n      __self: this\n    })),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 75\n    },\n    __self: this\n  }), React.createElement(Route, {\n    exact: true,\n    path: \"/about\",\n    component: About,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 90\n    },\n    __self: this\n  }), React.createElement(Route, {\n    exact: true,\n    path: \"/user/:login\",\n    render: props => React.createElement(User, Object.assign({}, props, {\n      getUser: getUser,\n      getUserRepos: getUserRepos,\n      user: user,\n      repos: repos,\n      loading: loading,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 95\n      },\n      __self: this\n    })),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 91\n    },\n    __self: this\n  })))));\n};\n\nexport default App;","map":{"version":3,"sources":["/Users/BossmanChambers/Desktop/github-finder/src/App.js"],"names":["axios","React","Fragment","useState","Alert","Users","User","About","Search","Navbar","GithubState","BrowserRouter","Router","Switch","Route","App","users","setUsers","user","setUser","repos","setRepos","loading","setLoading","alert","setAlert","searchUsers","text","res","get","process","env","REACT_APP_GITHUB_CLIENT_ID","REACT_APP_GITHUB_CLIENT_SECRET","data","items","getUser","username","getUserRepos","clearUsers","showAlert","msg","type","setTimeout","props","length"],"mappings":"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","sourcesContent":["import './App.css';\nimport axios from 'axios';\nimport React, { Fragment, useState } from 'react';\nimport Alert from './components/layout/Alert';\nimport Users from './components/users/Users';\nimport User from './components/users/User';\nimport About from './components/pages/About';\nimport Search from './components/users/Search';\nimport Navbar from './components/layout/Navbar';\nimport GithubState from './context/github/GithubState';\nimport { BrowserRouter as Router, Switch, Route } from 'react-router-dom';\nconst App = () => {\n  const [users, setUsers] = useState([]);\n  const [user, setUser] = useState({});\n  const [repos, setRepos] = useState([]);\n  const [loading, setLoading] = useState(false);\n  const [alert, setAlert] = useState(null);\n\n  //search Github Users\n  const searchUsers = async text => {\n    setLoading(true);\n\n    const res = await axios.get(\n      `https://api.github.com/search/users?q=${text}&client_id=${process.env.REACT_APP_GITHUB_CLIENT_ID}&client_secret=${process.env.REACT_APP_GITHUB_CLIENT_SECRET}`\n    );\n\n    setUsers(res.data.items);\n    setLoading(false);\n  };\n\n  //Get single Github User\n  const getUser = async username => {\n    setLoading(true);\n\n    const res = await axios.get(\n      `https://api.github.com/users/${username}?client_id=${process.env.REACT_APP_GITHUB_CLIENT_ID}&client_secret=${process.env.REACT_APP_GITHUB_CLIENT_SECRET}`\n    );\n\n    setUser(res.data);\n    setLoading(false);\n  };\n\n  //Get user repos\n  const getUserRepos = async username => {\n    setLoading(true);\n\n    const res = await axios.get(\n      `https://api.github.com/users/${username}/repos?per_page=5&sort=created:asc&client_id=${process.env.REACT_APP_GITHUB_CLIENT_ID}&client_secret=${process.env.REACT_APP_GITHUB_CLIENT_SECRET}`\n    );\n\n    setRepos(res.data);\n    setLoading(false);\n  };\n\n  //Clear Users from state\n  const clearUsers = () => {\n    setUsers([]);\n    setLoading(false);\n  };\n\n  // Set Alert\n  const showAlert = (msg, type) => {\n    setAlert({ msg, type });\n\n    setTimeout(() => setAlert(null), 2000);\n  };\n\n  return (\n    <Router>\n      <div className='App'>\n        <Navbar />\n        <div className='container'>\n          <Alert alert={alert} />\n          <Switch>\n            <Route\n              exact\n              path='/'\n              render={props => (\n                <Fragment>\n                  <Search\n                    searchUsers={searchUsers}\n                    clearUsers={clearUsers}\n                    showClear={users.length > 0 ? true : false}\n                    setAlert={showAlert}\n                  />\n                  <Users loading={loading} users={users} />\n                </Fragment>\n              )}\n            />\n            <Route exact path='/about' component={About} />\n            <Route\n              exact\n              path='/user/:login'\n              render={props => (\n                <User\n                  {...props}\n                  getUser={getUser}\n                  getUserRepos={getUserRepos}\n                  user={user}\n                  repos={repos}\n                  loading={loading}\n                />\n              )}\n            />\n          </Switch>\n        </div>\n      </div>\n    </Router>\n  );\n};\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}