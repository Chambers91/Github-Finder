{"ast":null,"code":"import _slicedToArray from \"/Users/BossmanChambers/Desktop/github-finder/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\nvar _jsxFileName = \"/Users/BossmanChambers/Desktop/github-finder/src/components/users/Search.js\";\nimport PropTypes from 'prop-types';\nimport React, { useState, useContext } from 'react';\nimport GithubContext from '../../context/github/githubContext';\n\nconst Search = ({\n  showClear,\n  clearUsers,\n  setAlert\n}) => {\n  const githubContext = useContext(GithubContext);\n\n  const _useState = useState(' '),\n        _useState2 = _slicedToArray(_useState, 2),\n        text = _useState2[0],\n        setText = _useState2[1];\n\n  const onSubmit = e => {\n    e.preventDefault();\n\n    if (text === ' ') {\n      setAlert('Please enter something ', 'light');\n    } else {\n      githubContext.searchUsers(text);\n      setText(' ');\n    }\n  };\n\n  const onChange = e => setText(e.target.value);\n\n  return React.createElement(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 21\n    },\n    __self: this\n  }, React.createElement(\"form\", {\n    onSubmit: onSubmit,\n    className: \"form\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 22\n    },\n    __self: this\n  }, React.createElement(\"input\", {\n    type: \"text\",\n    name: \"text\",\n    placeholder: \"Search Users...\",\n    value: text,\n    onChange: onChange,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 23\n    },\n    __self: this\n  }), React.createElement(\"input\", {\n    type: \"submit\",\n    value: \"Search\",\n    className: \"btn btn-dark btn-block\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 30\n    },\n    __self: this\n  })), showClear && React.createElement(\"button\", {\n    className: \"btn btn-light btn-block\",\n    onClick: clearUsers,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 37\n    },\n    __self: this\n  }, \"Clear\"));\n};\n\nSearch.props = {\n  clearUsers: PropTypes.func.isRequired,\n  showClear: PropTypes.bool.isRequired,\n  setAlert: PropTypes.func.isRequired\n};\nexport default Search;","map":{"version":3,"sources":["/Users/BossmanChambers/Desktop/github-finder/src/components/users/Search.js"],"names":["PropTypes","React","useState","useContext","GithubContext","Search","showClear","clearUsers","setAlert","githubContext","text","setText","onSubmit","e","preventDefault","searchUsers","onChange","target","value","props","func","isRequired","bool"],"mappings":";;AAAA,OAAOA,SAAP,MAAsB,YAAtB;AACA,OAAOC,KAAP,IAAgBC,QAAhB,EAA0BC,UAA1B,QAA4C,OAA5C;AACA,OAAOC,aAAP,MAA0B,oCAA1B;;AAEA,MAAMC,MAAM,GAAG,CAAC;AAAEC,EAAAA,SAAF;AAAaC,EAAAA,UAAb;AAAyBC,EAAAA;AAAzB,CAAD,KAAyC;AACtD,QAAMC,aAAa,GAAGN,UAAU,CAACC,aAAD,CAAhC;;AADsD,oBAE9BF,QAAQ,CAAC,GAAD,CAFsB;AAAA;AAAA,QAE/CQ,IAF+C;AAAA,QAEzCC,OAFyC;;AAItD,QAAMC,QAAQ,GAAGC,CAAC,IAAI;AACpBA,IAAAA,CAAC,CAACC,cAAF;;AACA,QAAIJ,IAAI,KAAK,GAAb,EAAkB;AAChBF,MAAAA,QAAQ,CAAC,yBAAD,EAA4B,OAA5B,CAAR;AACD,KAFD,MAEO;AACLC,MAAAA,aAAa,CAACM,WAAd,CAA0BL,IAA1B;AACAC,MAAAA,OAAO,CAAC,GAAD,CAAP;AACD;AACF,GARD;;AASA,QAAMK,QAAQ,GAAGH,CAAC,IAAIF,OAAO,CAACE,CAAC,CAACI,MAAF,CAASC,KAAV,CAA7B;;AAEA,SACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE;AAAM,IAAA,QAAQ,EAAEN,QAAhB;AAA0B,IAAA,SAAS,EAAC,MAApC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE;AACE,IAAA,IAAI,EAAC,MADP;AAEE,IAAA,IAAI,EAAC,MAFP;AAGE,IAAA,WAAW,EAAC,iBAHd;AAIE,IAAA,KAAK,EAAEF,IAJT;AAKE,IAAA,QAAQ,EAAEM,QALZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,EAQE;AACE,IAAA,IAAI,EAAC,QADP;AAEE,IAAA,KAAK,EAAC,QAFR;AAGE,IAAA,SAAS,EAAC,wBAHZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IARF,CADF,EAeGV,SAAS,IACR;AAAQ,IAAA,SAAS,EAAC,yBAAlB;AAA4C,IAAA,OAAO,EAAEC,UAArD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,aAhBJ,CADF;AAuBD,CAtCD;;AAwCAF,MAAM,CAACc,KAAP,GAAe;AACbZ,EAAAA,UAAU,EAAEP,SAAS,CAACoB,IAAV,CAAeC,UADd;AAEbf,EAAAA,SAAS,EAAEN,SAAS,CAACsB,IAAV,CAAeD,UAFb;AAGbb,EAAAA,QAAQ,EAAER,SAAS,CAACoB,IAAV,CAAeC;AAHZ,CAAf;AAMA,eAAehB,MAAf","sourcesContent":["import PropTypes from 'prop-types';\nimport React, { useState, useContext } from 'react';\nimport GithubContext from '../../context/github/githubContext';\n\nconst Search = ({ showClear, clearUsers, setAlert }) => {\n  const githubContext = useContext(GithubContext);\n  const [text, setText] = useState(' ');\n\n  const onSubmit = e => {\n    e.preventDefault();\n    if (text === ' ') {\n      setAlert('Please enter something ', 'light');\n    } else {\n      githubContext.searchUsers(text);\n      setText(' ');\n    }\n  };\n  const onChange = e => setText(e.target.value);\n\n  return (\n    <div>\n      <form onSubmit={onSubmit} className='form'>\n        <input\n          type='text'\n          name='text'\n          placeholder='Search Users...'\n          value={text}\n          onChange={onChange}\n        />\n        <input\n          type='submit'\n          value='Search'\n          className='btn btn-dark btn-block'\n        />\n      </form>\n      {showClear && (\n        <button className='btn btn-light btn-block' onClick={clearUsers}>\n          Clear\n        </button>\n      )}\n    </div>\n  );\n};\n\nSearch.props = {\n  clearUsers: PropTypes.func.isRequired,\n  showClear: PropTypes.bool.isRequired,\n  setAlert: PropTypes.func.isRequired\n};\n\nexport default Search;\n"]},"metadata":{},"sourceType":"module"}